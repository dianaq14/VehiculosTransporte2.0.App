// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehiculosTransporte.App.Persistencia;

#nullable disable

namespace VehiculosTransporte.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220920013859_Entidades4")]
    partial class Entidades4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Revision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaRevision")
                        .HasColumnType("datetime2");

                    b.Property<string>("NivelAceite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelLiquidoDireccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelLiquidoFrenos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelRefrigerante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Repuestos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValorRepuestos")
                        .HasColumnType("int");

                    b.Property<int?>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Revisiones");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.ServicioTransporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaServicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recorrido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoServicio")
                        .HasColumnType("int");

                    b.Property<int>("ValorServicio")
                        .HasColumnType("int");

                    b.Property<int?>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("ServiciosTransporte");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CapacidadPasajeros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConductorId")
                        .HasColumnType("int");

                    b.Property<int?>("DuenioId")
                        .HasColumnType("int");

                    b.Property<int?>("MecanicoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RevisionTecnicoMecanica")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SeguroContractual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SeguroExtracontractual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Soat")
                        .HasColumnType("datetime2");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo_año")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("placa")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConductorId");

                    b.HasIndex("DuenioId");

                    b.HasIndex("MecanicoId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Cliente", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Conductor", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.Property<string>("LicenciaConduccion")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Conductor");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Duenio", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Duenio");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.JefeOperaciones", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("JefeOperaciones");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Mecanico", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Mecanico");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Revision", b =>
                {
                    b.HasOne("VehiculosTransporte.App.Dominio.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.ServicioTransporte", b =>
                {
                    b.HasOne("VehiculosTransporte.App.Dominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("VehiculosTransporte.App.Dominio.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId");

                    b.Navigation("Cliente");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Vehiculo", b =>
                {
                    b.HasOne("VehiculosTransporte.App.Dominio.Conductor", "Conductor")
                        .WithMany()
                        .HasForeignKey("ConductorId");

                    b.HasOne("VehiculosTransporte.App.Dominio.Duenio", "Duenio")
                        .WithMany()
                        .HasForeignKey("DuenioId");

                    b.HasOne("VehiculosTransporte.App.Dominio.Mecanico", "Mecanico")
                        .WithMany()
                        .HasForeignKey("MecanicoId");

                    b.Navigation("Conductor");

                    b.Navigation("Duenio");

                    b.Navigation("Mecanico");
                });
#pragma warning restore 612, 618
        }
    }
}
